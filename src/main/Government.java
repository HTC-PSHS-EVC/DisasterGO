package main;
import java.awt.Cursor;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import java.util.Random;

/**
 *
 * @author Sony VAIO
 */
public class Government extends javax.swing.JFrame {
    
    private DataManager data;
    private int [] disasterForecast;
    private int danger = 25;
    
    /**
     * Creates new form Government
     */
    public Government() {
        initComponents();
        
        initDisasterForecast();
        this.setLocationRelativeTo(null);
        
        start.setOpaque(false);
        start.setContentAreaFilled(false);
        start.setBorderPainted(false);
        start.setCursor(new Cursor(Cursor.HAND_CURSOR));
        roads.setOpaque(false);
        roads.setContentAreaFilled(false);
        roads.setBorderPainted(false);
        roads.setCursor(new Cursor(Cursor.HAND_CURSOR));
        help.setOpaque(false);
        help.setContentAreaFilled(false);
        help.setBorderPainted(false);
        help.setCursor(new Cursor(Cursor.HAND_CURSOR));
        plane.setOpaque(false);
        plane.setContentAreaFilled(false);
        plane.setBorderPainted(false);
        plane.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        max.setText(maximum+"%");
        
        Disaster dis = new Disaster();
        dis.setVisible(true);
    }
    
    private int maximum = 100;
    private int totalpercent=0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner7 = new javax.swing.JSpinner();
        Manila = new javax.swing.JLabel();
        Tuguegarao = new javax.swing.JLabel();
        Cagayan = new javax.swing.JLabel();
        Davao = new javax.swing.JLabel();
        Puerto = new javax.swing.JLabel();
        Cebu = new javax.swing.JLabel();
        Tacloban = new javax.swing.JLabel();
        MNL = new javax.swing.JSpinner();
        TUG = new javax.swing.JSpinner();
        TAC = new javax.swing.JSpinner();
        CEB = new javax.swing.JSpinner();
        DAV = new javax.swing.JSpinner();
        CDO = new javax.swing.JSpinner();
        PUE = new javax.swing.JSpinner();
        help = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Danger = new javax.swing.JSpinner();
        max = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        per_TAC = new javax.swing.JLabel();
        per_TUG = new javax.swing.JLabel();
        per_CEB = new javax.swing.JLabel();
        per_PUE = new javax.swing.JLabel();
        per_CDO = new javax.swing.JLabel();
        per_DAV = new javax.swing.JLabel();
        per_MAN = new javax.swing.JLabel();
        tot = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        roads = new javax.swing.JButton();
        plane = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tot1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 780));
        getContentPane().setLayout(null);

        Manila.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Manila.setText("Manila");
        getContentPane().add(Manila);
        Manila.setBounds(160, 240, 70, 30);

        Tuguegarao.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Tuguegarao.setText("Tuguegarao");
        getContentPane().add(Tuguegarao);
        Tuguegarao.setBounds(150, 110, 120, 30);

        Cagayan.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Cagayan.setText("CDO");
        getContentPane().add(Cagayan);
        Cagayan.setBounds(350, 490, 60, 30);

        Davao.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Davao.setText("Davao");
        getContentPane().add(Davao);
        Davao.setBounds(421, 564, 60, 20);

        Puerto.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Puerto.setText("Puerto Princesa");
        getContentPane().add(Puerto);
        Puerto.setBounds(40, 450, 140, 20);

        Cebu.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Cebu.setText("Cebu");
        getContentPane().add(Cebu);
        Cebu.setBounds(310, 410, 60, 20);

        Tacloban.setFont(new java.awt.Font("Paul Grotesk -Trail", 1, 18)); // NOI18N
        Tacloban.setText("Tacloban");
        getContentPane().add(Tacloban);
        Tacloban.setBounds(440, 320, 90, 19);

        MNL.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        MNL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MNLStateChanged(evt);
            }
        });
        getContentPane().add(MNL);
        MNL.setBounds(157, 270, 60, 30);

        TUG.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        TUG.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TUGStateChanged(evt);
            }
        });
        getContentPane().add(TUG);
        TUG.setBounds(170, 140, 60, 30);

        TAC.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        TAC.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TACStateChanged(evt);
            }
        });
        getContentPane().add(TAC);
        TAC.setBounds(450, 340, 60, 30);

        CEB.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        CEB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CEBStateChanged(evt);
            }
        });
        getContentPane().add(CEB);
        CEB.setBounds(307, 430, 60, 30);

        DAV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        DAV.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DAVStateChanged(evt);
            }
        });
        getContentPane().add(DAV);
        DAV.setBounds(417, 590, 70, 30);

        CDO.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        CDO.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CDOStateChanged(evt);
            }
        });
        getContentPane().add(CDO);
        CDO.setBounds(347, 520, 60, 30);

        PUE.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 10));
        PUE.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PUEStateChanged(evt);
            }
        });
        getContentPane().add(PUE);
        PUE.setBounds(77, 480, 70, 30);

        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        getContentPane().add(help);
        help.setBounds(520, 680, 60, 60);

        jLabel5.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        jLabel5.setText("DangeR: ");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 60, 80, 25);

        jLabel1.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        jLabel1.setText("Efficiency:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 90, 25);

        Danger.setValue(25);
        Danger.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DangerStateChanged(evt);
            }
        });
        getContentPane().add(Danger);
        Danger.setBounds(90, 60, 60, 30);

        max.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        max.setText("100%");
        getContentPane().add(max);
        max.setBounds(120, 20, 90, 25);

        jLabel3.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        jLabel3.setText("Total:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 100, 49, 25);

        per_TAC.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_TAC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_TAC.setText("0%");
        getContentPane().add(per_TAC);
        per_TAC.setBounds(510, 340, 60, 30);

        per_TUG.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_TUG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_TUG.setText("0%");
        getContentPane().add(per_TUG);
        per_TUG.setBounds(170, 170, 60, 30);

        per_CEB.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_CEB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_CEB.setText("0%");
        getContentPane().add(per_CEB);
        per_CEB.setBounds(310, 460, 60, 30);

        per_PUE.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_PUE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_PUE.setText("0%");
        getContentPane().add(per_PUE);
        per_PUE.setBounds(80, 510, 60, 30);

        per_CDO.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_CDO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_CDO.setText("0%");
        getContentPane().add(per_CDO);
        per_CDO.setBounds(340, 550, 60, 30);

        per_DAV.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_DAV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_DAV.setText("0%");
        getContentPane().add(per_DAV);
        per_DAV.setBounds(420, 620, 60, 30);

        per_MAN.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        per_MAN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        per_MAN.setText("0%");
        getContentPane().add(per_MAN);
        per_MAN.setBounds(160, 300, 60, 30);

        tot.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        tot.setText("0%");
        getContentPane().add(tot);
        tot.setBounds(80, 100, 50, 25);

        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        getContentPane().add(start);
        start.setBounds(20, 690, 100, 30);

        roads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roadsActionPerformed(evt);
            }
        });
        getContentPane().add(roads);
        roads.setBounds(10, 650, 120, 40);

        plane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planeActionPerformed(evt);
            }
        });
        getContentPane().add(plane);
        plane.setBounds(370, 50, 80, 50);

        jLabel2.setFont(new java.awt.Font("Paul Grotesk -Trail", 0, 11)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mainph NO ROADS.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 600, 750);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mainph SMALL.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 600, 750);

        tot1.setFont(new java.awt.Font("Bebas", 0, 18)); // NOI18N
        tot1.setText("0%");
        getContentPane().add(tot1);
        tot1.setBounds(80, 50, 50, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initDisasterForecast(){
        disasterForecast = DataManager.calcDisForecast(100);
        
        // <editor-fold defaultstate="collapsed" desc="setText disaster forecasts">  
        per_MAN.setText(Integer.toString(disasterForecast[0]) + "%");
        per_TUG.setText(Integer.toString(disasterForecast[1]) + "%");
        per_TAC.setText(Integer.toString(disasterForecast[2]) + "%");
        per_CEB.setText(Integer.toString(disasterForecast[3]) + "%");
        per_DAV.setText(Integer.toString(disasterForecast[4]) + "%");
        per_PUE.setText(Integer.toString(disasterForecast[5]) + "%");
        per_CDO.setText(Integer.toString(disasterForecast[6]) + "%");
        // </editor-fold> 
    }
    
    private int getInputSum(){
        return (Integer) MNL.getValue() + (Integer) TAC.getValue() + 
               (Integer) CEB.getValue() + (Integer) TUG.getValue() +
               (Integer) PUE.getValue() + (Integer) CDO.getValue() + 
               (Integer) DAV.getValue();
    }
    
    // <editor-fold defaultstate="collapsed" desc="State Change Events">  
    
    private void MNLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MNLStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            MNL.setValue(MNL.getPreviousValue());
        }
        
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_MNLStateChanged

    private void TUGStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TUGStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            TUG.setValue(TUG.getPreviousValue());
        }
        
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_TUGStateChanged

    private void CEBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CEBStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            CEB.setValue(CEB.getPreviousValue());
        }
        
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_CEBStateChanged

    private void TACStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TACStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum){
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            TAC.setValue(TAC.getPreviousValue());
        }
        
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_TACStateChanged

    private void PUEStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PUEStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            PUE.setValue(PUE.getPreviousValue());
        }
        
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_PUEStateChanged

    private void DAVStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DAVStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            DAV.setValue(DAV.getPreviousValue());
        }
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_DAVStateChanged

    private void CDOStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CDOStateChanged
        totalpercent = getInputSum();
        
        if(totalpercent > maximum) {
            JOptionPane.showMessageDialog(null, "Maximum Percentage Exceeded");
            CDO.setValue(CDO.getPreviousValue());
        }
        tot.setText(Integer.toString(totalpercent) + "%");
    }//GEN-LAST:event_CDOStateChanged

    // </editor-fold> 
    
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        int effic = sim1();
        Efficiency eff = new Efficiency();
        eff.setVisible(true);
        eff.jLabel2.setText(Integer.toString(effic));
        this.dispose();
    }//GEN-LAST:event_startActionPerformed

    private void roadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roadsActionPerformed
        if(jLabel2.isVisible()){
            jLabel2.setVisible(false);
            plane.setEnabled(true);
        }else{
            jLabel2.setVisible(true);
            plane.setEnabled(false);
        }
    }//GEN-LAST:event_roadsActionPerformed

    private void DangerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DangerStateChanged
        danger = (Integer) Danger.getValue();
        
        if(danger > 100) {
            JOptionPane.showMessageDialog(null, "Maximum Danger! Exceeded");
            Danger.setValue(Danger.getPreviousValue());
        }
    }//GEN-LAST:event_DangerStateChanged

    private void planeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planeActionPerformed
        // TODO add your handling code here:
        new Planes().setVisible(true);
    }//GEN-LAST:event_planeActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // TODO add your handling code here:
        new HelpG().setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    private int sim1(){
        int totalScore = 0;
        
        for(int desCity = 0; desCity < 7; ++desCity){
            totalScore += getResAvailability(desCity);
            
            //System.out.println(Double.toString(score) + " " + Integer.toString(desCity));
            //max.setText(Double.toString(data.getMinDist(, score)))
        }
        
        double ave = (totalScore/7.0);
        
        max.setText( Integer.toString((int) ave) + "%" );
        return (int) ave;
    }
    
    private void sim2(){
        int desCity = 0;
        Random ran = new Random();
        int ranNum = ran.nextInt(100);
        while(ranNum > disasterForecast[desCity]){
            ranNum -= disasterForecast[desCity];
            desCity++;
        }
        
        int score = getResAvailability(desCity);
        max.setText(Double.toString(score) + "->" + Integer.toString(desCity));
    }
    
    private int getResAvailability(int desCity){
        data = new DataManager();
            
        data.setResDist(0, (Integer) MNL.getValue());
        data.setResDist(1, (Integer) TUG.getValue());
        data.setResDist(2, (Integer) TAC.getValue());
        data.setResDist(3, (Integer) CEB.getValue());
        data.setResDist(4, (Integer) DAV.getValue());
        data.setResDist(5, (Integer) PUE.getValue());
        data.setResDist(6, (Integer) CDO.getValue());
        
        //  assume that the affected city's airport gets rekt
        //  50% chance for each road leading to the city to get rekt
        for(int otherCity = 0; otherCity < 7; ++otherCity) {
            if(otherCity != desCity) {
                data.destAir(desCity, otherCity);
                data.destAir(otherCity, desCity);
                
                Random ran = new Random();
                
                //  25% of other roads got semi-rekt
                if(ran.nextDouble() < danger / 100.0) {
                    int cityA = ran.nextInt(7);
                    int cityB = ran.nextInt(7);
                    data.delayRoad(cityA, cityB, ran.nextDouble() * 5);
                    data.delayRoad(cityB, cityA, ran.nextDouble() * 5);
                }
                
                //  25% of roads got rekt
                if(ran.nextDouble() < danger / 100.0) {
                    data.destRoad(desCity, otherCity);
                    data.destRoad(otherCity, desCity);
                }
            }
        }

        //  recalculate shortest paths
        data.calcNewDist();
        data.calcAPSP();
        
        int score = 0;
        
        for(int otherCity = 0; otherCity < 7; ++otherCity){
            if(otherCity != desCity && 
               data.getMinDist(desCity, otherCity) <= 24){
                score += data.getResDist(otherCity);
                //System.out.print(Double.toString(data.getResDist(otherCity)) + " ");
            }
        }
        System.out.println(Double.toString(score) + " " + Integer.toString(desCity));
        return score;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Government.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Government.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Government.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Government.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Government().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner CDO;
    private javax.swing.JSpinner CEB;
    private javax.swing.JLabel Cagayan;
    private javax.swing.JLabel Cebu;
    private javax.swing.JSpinner DAV;
    private javax.swing.JSpinner Danger;
    private javax.swing.JLabel Davao;
    private javax.swing.JSpinner MNL;
    private javax.swing.JLabel Manila;
    private javax.swing.JSpinner PUE;
    private javax.swing.JLabel Puerto;
    private javax.swing.JSpinner TAC;
    private javax.swing.JSpinner TUG;
    private javax.swing.JLabel Tacloban;
    private javax.swing.JLabel Tuguegarao;
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JLabel max;
    private javax.swing.JLabel per_CDO;
    private javax.swing.JLabel per_CEB;
    private javax.swing.JLabel per_DAV;
    private javax.swing.JLabel per_MAN;
    private javax.swing.JLabel per_PUE;
    private javax.swing.JLabel per_TAC;
    private javax.swing.JLabel per_TUG;
    private javax.swing.JButton plane;
    private javax.swing.JButton roads;
    private javax.swing.JButton start;
    private javax.swing.JLabel tot;
    private javax.swing.JLabel tot1;
    // End of variables declaration//GEN-END:variables
}
